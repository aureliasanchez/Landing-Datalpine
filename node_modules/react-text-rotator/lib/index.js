'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _class, _temp2;

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactTransitionGroup = require('react-transition-group');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function transitions(_ref) {
  var duration = _ref.duration;

  return {
    "fade-default": {
      transition: 'opacity ' + duration + 'ms ease-in',
      opacity: 0
    },

    "fade-entering": {
      opacity: 0
    },

    "fade-entered": {
      opacity: 1
    },

    "fade-exiting": {
      opacity: 0
    },

    "fade-exited": {
      opacity: 0
    }
  };
}

var TextRotator = (_temp2 = _class = function (_React$Component) {
  _inherits(TextRotator, _React$Component);

  function TextRotator() {
    var _temp, _this, _ret;

    _classCallCheck(this, TextRotator);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
      current: null,
      index: 0,
      entered: false
    }, _this.willUnmount = false, _this.trigger = function () {
      var _this$props = _this.props,
          content = _this$props.content,
          startDelay = _this$props.startDelay,
          time = _this$props.time;


      if (content.length > 0) {
        _this.timeOut = setTimeout(function () {
          _this.next();
          _this.interval = setInterval(function () {
            return _this.next();
          }, time);
        }, startDelay);
      }
    }, _this.next = function () {
      if (!_this.willUnmount) {
        var _this$props2 = _this.props,
            _content = _this$props2.content,
            _time = _this$props2.time;

        var currentStep = _this.state.index;
        var total = _content.length || 0;

        var _index = 0;

        if (_this.state.current) {
          _index = total === currentStep + 1 ? 0 : currentStep + 1;
        }

        var _current = _content[_index];
        _this.setState({ index: _index });
        _this.setCurrent(_current);
      }
    }, _this.setCurrent = function (item) {
      var _this$props3 = _this.props,
          time = _this$props3.time,
          transitionTime = _this$props3.transitionTime;

      _this.setState({ current: item, entered: true });
      setTimeout(function () {
        return _this.setState({ entered: false });
      }, time - transitionTime);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  TextRotator.prototype.componentDidMount = function componentDidMount() {
    this.trigger();
  };

  TextRotator.prototype.componentWillUnmount = function componentWillUnmount() {
    clearInterval(this.interval);
    clearTimeout(this.timeOut);
    this.willUnmount = true;
  };

  TextRotator.prototype.render = function render() {
    var _props = this.props,
        transitionTime = _props.transitionTime,
        content = _props.content;
    var _state = this.state,
        current = _state.current,
        index = _state.index,
        entered = _state.entered;

    var _ref2 = current || content && content[0] || {},
        className = _ref2.className,
        _ref2$animation = _ref2.animation,
        animation = _ref2$animation === undefined ? 'fade' : _ref2$animation,
        text = _ref2.text;

    var styles = transitions({ duration: transitionTime });

    if (!text) return React.createElement('span', null);

    return React.createElement(
      _reactTransitionGroup.Transition,
      { 'in': entered, timeout: transitionTime },
      function (state) {
        return React.createElement(
          'span',
          {
            key: index,
            className: className,
            style: _extends({}, styles[animation + '-default'], styles[animation + '-' + state])
          },
          text
        );
      }
    );
  };

  return TextRotator;
}(React.Component), _class.defaultProps = {
  time: 2500,
  startDelay: 250,
  transitionTime: 500
}, _temp2);
exports.default = TextRotator;
module.exports = exports['default'];